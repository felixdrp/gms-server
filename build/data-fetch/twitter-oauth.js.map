{"version":3,"sources":["data-fetch/twitter-oauth.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAcqB;AACnB,WADmB,YACnB,CAAY,IAAZ,EAAkB;;;wCADC,cACD;;AAChB,SAAK,WAAL,GAAmB;AACjB,YAAM,iBAAN;AACA,YAAM,GAAN;AACA,cAAQ,MAAR;KAHF,CADgB;;AAOhB,SAAK,cAAL,GAAsB,UAAE,aAAF,EAAqB;AACzC,UAAI,OAAO,iBAAiB,mPAAjB,CAD8B;AAEzC,wCACK,MAAK,WAAL;AACH,cAAM,sBAAN;AACA,iBAAS;AACP,2BAAiB,IAAjB;SADF;QAHF,CAFyC;KAArB,CAPN;;AAkBhB,SAAK,mBAAL,GAA2B,UAAE,aAAF,EAAqB;AAC9C,UAAI,OAAO,iBAAiB,mPAAjB,CADmC;AAE9C,wCACK,MAAK,WAAL;AACH,gBAAQ,KAAR;AACA,cAAM,qBAAN;AACA,iBAAS;AACP,2BAAiB,IAAjB;SADF;QAJF,CAF8C;KAArB,CAlBX;;AA8BhB,SAAK,aAAL,GAAqB,UAAE,aAAF,EAAqB;AACxC,UAAI,OAAO,iBAAiB,mPAAjB,CAD6B;AAExC,wCACK,MAAK,WAAL;AACH,gBAAQ,KAAR;AACA,cAAM,qBAAN;AACA,iBAAS;AACP,2BAAiB,IAAjB;SADF;QAJF,CAFwC;KAArB,CA9BL;;AA6ChB,QAAI,kBAAkB;AACpB,cAAQ,MAAR;;KADE,CA7CY;;AAkDhB,SAAK,MAAL,GAAc,UAAE,aAAF,EAAqB;AACjC,aAAO,sBACL,UAAC,OAAD,EAAU,MAAV,EAAqB;AACnB,wBAAM,OAAN,CACI,MAAK,cAAL,CAAqB,aAArB,CADJ,EAEI,UAAE,QAAF,EAAgB;AACd,cAAI,OAAO,EAAP,CADU;AAEd,mBAAS,EAAT,CAAY,MAAZ,EAAoB,UAAU,KAAV,EAAiB;AACnC,oBAAQ,KAAR,CADmC;WAAjB,CAApB,CAFc;;AAMd,mBAAS,EAAT,CAAY,KAAZ,EAAmB,YAAY;AAC7B,oBAAQ,GAAR,CAAY,gBAAgB,IAAhB,CAAZ,CAD6B;AAE7B,oBAAS,IAAT,EAF6B;WAAZ,CAAnB,CANc;SAAhB,CAFJ,CAcG,GAdH,GADmB;OAArB,CADF,CADiC;KAArB,CAlDE;GAAlB;;6BADmB;;;4FA0EL;YACR;;;;;yBAAS;;;uBAGI,KAAK,MAAL,CAAa,KAAb;;;AAAf;;;;;;;;AAGA,wBAAQ,KAAR;;;iDAGK;;;;;;;;;;;;;;;;;SApFU","file":"data-fetch/twitter-oauth.js","sourcesContent":["/**\n * Module to Facade the data fetch from server and client.\n *\n *\n * Example usage:\n * ```\n\n *\n * ```\n */\n\nimport https from 'https'\nimport crypto from 'crypto'\n\nexport default class TwitterOAuth {\n  constructor(type) {\n    this.optionsBase = {\n      host: 'api.twitter.com',\n      port: 443,\n      method: 'POST',\n    };\n\n    this.optionsRequest = ( authorization ) => {\n      let auth = authorization || 'OAuth oauth_consumer_key=\"AntPzHq9fsnTPbbaP0nrwngJt\", oauth_nonce=\"69e3594f96e53f1a23bd8e5cea3cb0fc\", oauth_signature=\"puHy3%2BFnuOJqRTveYcv8pQWzn%2BM%3D\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"1458429951\", oauth_version=\"1.0\"';\n      return {\n        ...this.optionsBase,\n        path: '/oauth/request_token',\n        headers: {\n          'Authorization': auth\n        }\n      }\n    };\n\n    this.optionsAuthenticate = ( authorization ) => {\n      let auth = authorization || 'OAuth oauth_consumer_key=\"AntPzHq9fsnTPbbaP0nrwngJt\", oauth_nonce=\"69e3594f96e53f1a23bd8e5cea3cb0fc\", oauth_signature=\"puHy3%2BFnuOJqRTveYcv8pQWzn%2BM%3D\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"1458429951\", oauth_version=\"1.0\"';\n      return {\n        ...this.optionsBase,\n        method: 'GET',\n        path: '/oauth/authenticate',\n        headers: {\n          'Authorization': auth\n        }\n      }\n    };\n\n    this.options_other = ( authorization ) => {\n      let auth = authorization || 'OAuth oauth_consumer_key=\"AntPzHq9fsnTPbbaP0nrwngJt\", oauth_nonce=\"69e3594f96e53f1a23bd8e5cea3cb0fc\", oauth_signature=\"puHy3%2BFnuOJqRTveYcv8pQWzn%2BM%3D\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"1458429951\", oauth_version=\"1.0\"';\n      return {\n        ...this.optionsBase,\n        method: 'GET',\n        path: '/oauth/authenticate',\n        headers: {\n          'Authorization': auth\n        }\n      }\n    };\n\n\n\n\n    var signComponents2 = {\n      method: 'POST',\n\n    }\n\n    this.client = ( authorization ) => {\n      return new Promise(\n        (resolve, reject) => {\n          https.request(\n              this.optionsRequest( authorization ),\n              ( response ) => {\n                var data = '';\n                response.on('data', function (chunk) {\n                  data += chunk;\n                });\n\n                response.on('end', function () {\n                  console.log('tweet X-D: ' + data);\n                  resolve( data );\n                });\n              }\n            )\n            .end();\n        }\n      );\n    };\n  }\n\n  async getData(query) {\n    let result = {};\n\n    try {\n      result = await this.client( query );\n    }\n    catch (e) {\n      console.error(e);\n    }\n\n    return result;\n  }\n}\n"],"sourceRoot":"/source/"}