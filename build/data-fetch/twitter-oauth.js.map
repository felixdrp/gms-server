{"version":3,"sources":["data-fetch/twitter-oauth.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWA;;;;AACA;;;;;;;;;;;;;;;;;IAEqB;AACnB,WADmB,YACnB,GAAyB;;;QAAZ,6DAAO,kBAAK;wCADN,cACM;;;;AACvB,SAAK,WAAL,GAAmB;AACjB,YAAM,iBAAN;AACA,YAAM,GAAN;AACA,cAAQ,MAAR;KAHF,CADuB;;AAOvB,SAAK,cAAL,GAAsB,KAAK,cAAL,IAAuB,EAAvB,CAPC;AAQvB,SAAK,WAAL,GAAmB,KAAK,WAAL,IAAoB,EAApB,CARI;AASvB,SAAK,WAAL,GAAmB,IAAnB,CATuB;AAUvB,SAAK,iBAAL,GAAyB,IAAzB,CAVuB;AAWvB,SAAK,cAAL,GAAsB,wBAAtB;;;AAXuB,QAcvB,CAAK,mBAAL,GAA2B,UAAE,IAAF,EAAY;AACrC,UAAI,SAAS,KAAK,MAAL,CADwB;AAErC,UAAI,OACF,+BAA+B,OAAO,kBAAP,GAA4B,KAA3D,GACA,eADA,GACkB,OAAO,WAAP,GAAqB,KADvC,GAEA,mBAFA,GAEsB,OAAO,eAAP,GAAyB,KAF/C,GAGA,kBAHA,GAGqB,mBAAoB,MAAK,cAAL,CAHzC,GAGiE,KAHjE,GAIA,uDAJA,GAI0D,OAAO,eAAP,GAAyB,wBAJnF,CAHmC;AAQrC,wCACK,MAAK,WAAL;AACH,cAAM,sBAAN;AACA,iBAAS;AACP,2BAAiB,IAAjB;SADF;QAHF,CARqC;KAAZ,CAdJ;;AA+BvB,SAAK,aAAL,GAAqB,UAAE,aAAF,EAAqB;AACxC,UAAI,OAAO,iBAAiB,mPAAjB,CAD6B;AAExC,wCACK,MAAK,WAAL;AACH,gBAAQ,KAAR;AACA,cAAM,qBAAN;AACA,iBAAS;AACP,2BAAiB,IAAjB;SADF;QAJF,CAFwC;KAArB,CA/BE;GAAzB;;6BADmB;;;;YAoEb,QACA,OACA,gBACA;;;;;AAHA,yBAAS,IACT,QAAQ,uBACR,iBAAiB,KAAK,cAAL,EACjB,SAAS;AACP,sCAAoB,KAAK,WAAL;AACpB,+BAAa,MAAM,aAAN,CAAqB,EAAC,MAAM,EAAN,EAAU,cAAc,EAAd,EAAhC,CAAb;AACA,0CAAwB,WAAxB;AACA,mCAAiB,KAAK,GAAL,GAAW,QAAX,GAAsB,KAAtB,CAA4B,CAA5B,EAA+B,CAAC,CAAD,CAAhD;AACA,iCAAe,KAAf;AACA,kCAAgB,KAAK,cAAL;;;;uBAIL,KAAK,WAAL;;AAEb,qBAAK,mBAAL,CAAyB;AACvB,qDACK;AACH,qCAAiB,MAAM,IAAN,CAAW;AAC1B,mCAAa,MAAb;AACA,2BAAK,6CAAL;AACA,sCAAgB,cAAhB;AACA,oCAJ0B;qBAAX,CAAjB;oBAFF;iBADF,CAFa;;;AAAf;;;;;;;AAeU,wBAAQ,KAAR;;;;AAEZ,qBAAK,WAAL,GAAmB,gCAAgC,IAAhC,CAAsC,MAAtC,EAA+C,CAA/C,CAAnB;AACA,qBAAK,iBAAL,GAAyB,qCAAqC,IAArC,CAA2C,MAA3C,EAAoD,CAApD,CAAzB;;;AAGA,oBAAK,CAAC,QAAS,kCAAkC,IAAlC,CAAuC,+BAAvC,EAAwE,CAAxE,CAAT,CAAD,EAAyF;AAC5F,0BAAQ,IAAR,CAAa,gCAAb,EAD4F;iBAA9F;;iDAIO,EAAE,cAAc,KAAK,WAAL,EAAkB,oBAAoB,KAAK,iBAAL;;;;;;;;;;;;;;;;;;yCAG/B;UAAZ,6DAAO,kBAAK;;;AAE9B,UAAI,QAAQ,qBAAR;UACA,cAAc,KAAK,WAAL,IAAoB,EAApB;UACd,iBAAiB,KAAK,kBAAL,IAA2B,KAAK,iBAAL;UAC5C,QAAQ,KAAK,YAAL,IAAqB,KAAK,WAAL;UAC7B,cAAc,KAAK,YAAL,IAAqB,KAAK,WAAL;UACnC,YAAY,KAAK,GAAL,GAAW,QAAX,GAAsB,KAAtB,CAA4B,CAA5B,EAA+B,CAAC,CAAD,CAA3C;UACA,QAAQ,MAAM,aAAN,CAAqB,EAAC,MAAM,EAAN,EAAU,cAAc,EAAd,EAAhC,CAAR;UACA,YAAY,MAAM,IAAN,CAAW;AACrB,qBAAa,KAAb;AACA,aAAK,4CAAL;AACA,eAAO;AACL,uBAAa,KAAb;SADF;AAGA,wBAAgB,cAAhB;AACA,2BAAmB,WAAnB;AACA,gBAAQ;AACN,8BAAoB,WAApB;AACA,uBAAa,KAAb;AACA,uBAAa,KAAb;AACA,kCAAwB,WAAxB;AACA,2BAAiB,SAAjB;AACA,yBAAe,KAAf;AACA,0BAAgB,mBAAoB,KAAK,cAAL,CAApC;SAPF;OARU,CAAZ,CAT0B;;AA4B9B,aAAO;AACL,eAAO,yBAAyB,WAAzB,GAAuC,KAAvC,GACA,eADA,GACkB,KADlB,GAC2B,KAD3B,GAEA,eAFA,GAEkB,KAFlB,GAE0B,KAF1B,GAGA,mBAHA,GAGsB,SAHtB,GAGkC,KAHlC,GAIA,kBAJA,GAIqB,mBAAoB,KAAK,cAAL,CAJzC,GAIiE,KAJjE,GAKA,uDALA,GAK0D,SAL1D,GAKsE,wBALtE;OADT,CA5B8B;;;;;;;;;AA0CtB,sBAAc,oBAMlB;;;;;;;;uBAN+C,KAAK,YAAL;;;;AAA3C;AAAc;;;;;;;;;AAIV,wBAAQ,KAAR;;;AAER,4CAA4B,KAAK,kBAAL,CAAyB,EAAE,0BAAF,EAAgB,sCAAhB,EAAzB;;;;kDAGzB,EAAE,0BAAF,EAAgB,oDAAhB;;;;;;;;;;;;;;;;;SAhKU;;;;OA8CnB,cAAc,UAAE,OAAF,EAAe;AAC3B,WAAO,sBACL,UAAC,OAAD,EAAU,MAAV,EAAqB;AACnB,sBAAM,OAAN,CACE,OADF,EAEE,UAAE,QAAF,EAAgB;AACd,YAAI,OAAO,EAAP,CADU;;AAGd,iBAAS,EAAT,CAAY,MAAZ,EAAoB;iBAAS,QAAQ,KAAR;SAAT,CAApB,CAHc;;AAKd,iBAAS,EAAT,CAAY,KAAZ,EAAmB,YAAM;AACvB,kBAAQ,GAAR,CAAa,oBAAoB,IAApB,CAAb,CADuB;AAEvB,kBAAS,IAAT,EAFuB;SAAN,CAAnB,CALc;OAAhB,CAFF,CAaC,GAbD,GADmB;KAArB,CADF,CAD2B;GAAf;;;kBA9CK","file":"data-fetch/twitter-oauth.js","sourcesContent":["/**\n * Module to Facade the data fetch from server and client.\n *\n *\n * Example usage:\n * ```\n\n *\n * ```\n */\n\nimport https from 'https'\nimport OAuth from '../oauth/oauth'\n\nexport default class TwitterOAuth {\n  constructor( data = {} ) {\n    this.optionsBase = {\n      host: 'api.twitter.com',\n      port: 443,\n      method: 'POST',\n    };\n\n    this.customerSecret = data.customerSecret || '';\n    this.consumerKey = data.consumerKey || '';\n    this.oauth_token = null;\n    this.accessTokenSecret = null;\n    this.oauth_callback = 'http://127.0.0.1:8009/';\n    // this.oauth_callback = encodeURIComponent('http://localhost:8009/');\n\n    this.optionsRequestToken = ( data ) => {\n      let header = data.header;\n      let auth =\n        'OAuth oauth_consumer_key=\"' + header.oauth_consumer_key + '\", ' +\n        'oauth_nonce=\"' + header.oauth_nonce + '\", ' +\n        'oauth_signature=\"' + header.oauth_signature + '\", ' +\n        'oauth_callback=\"' + encodeURIComponent( this.oauth_callback ) + '\", ' +\n        'oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"' + header.oauth_timestamp + '\", oauth_version=\"1.0\"';\n      return {\n        ...this.optionsBase,\n        path: '/oauth/request_token',\n        headers: {\n          'Authorization': auth\n        }\n      }\n    };\n\n    this.options_other = ( authorization ) => {\n      let auth = authorization || 'OAuth oauth_consumer_key=\"AntPzHq9fsnTPbbaP0nrwngJt\", oauth_nonce=\"69e3594f96e53f1a23bd8e5cea3cb0fc\", oauth_signature=\"puHy3%2BFnuOJqRTveYcv8pQWzn%2BM%3D\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"1458429951\", oauth_version=\"1.0\"';\n      return {\n        ...this.optionsBase,\n        method: 'GET',\n        path: '/oauth/authenticate',\n        headers: {\n          'Authorization': auth\n        }\n      }\n    };\n\n  }\n\n  httpsClient = ( options ) => {\n    return new Promise(\n      (resolve, reject) => {\n        https.request(\n          options,\n          ( response ) => {\n            let data = '';\n\n            response.on('data', chunk => data += chunk );\n\n            response.on('end', () => {\n              console.log( 'Twitter oAuth: ' + data );\n              resolve( data );\n            });\n          }\n        )\n        .end();\n      }\n    );\n  };\n\n  async requestToken() {\n    let result = {},\n        oauth = new OAuth(),\n        customerSecret = this.customerSecret,\n        header = {\n          oauth_consumer_key: this.consumerKey,\n          oauth_nonce: oauth.getOAuthNonce( {size: 32, codification: 16} ),\n          oauth_signature_method: \"HMAC-SHA1\",\n          oauth_timestamp: Date.now().toString().slice(0, -3),\n          oauth_version: \"1.0\",\n          oauth_callback: this.oauth_callback,\n        };\n\n    try {\n      result = await this.httpsClient(\n        // The options to make a http call for request a token.\n        this.optionsRequestToken({\n          header: {\n            ...header,\n            oauth_signature: oauth.sign({\n              http_method: 'POST',\n              url: 'https://api.twitter.com/oauth/request_token',\n              customerSecret: customerSecret,\n              header\n            })\n          }\n        })\n      );\n    }\n    catch (e) { console.error(e); }\n\n    this.oauth_token = /oauth_token\\=([0-z\\-]+)(?=\\&)/.exec( result )[1];\n    this.accessTokenSecret = /oauth_token_secret\\=([0-z]+)(?=\\&)/.exec( result )[1];\n    // Check if  oauth_callback_confirmed=true\n\n    if ( !Boolean( /oauth_callback_confirmed=(true)/.exec('oauth_callback_confirmed=true')[1] ) ) {\n      console.warn('oauth_callback_confirmed=false');\n    }\n\n    return { requestToken: this.oauth_token, requestTokenSecret: this.accessTokenSecret };\n  }\n\n  headerAuthenticate( data = {} ) {\n    // let auth = authorization || 'OAuth oauth_consumer_key=\"AntPzHq9fsnTPbbaP0nrwngJt\", oauth_nonce=\"69e3594f96e53f1a23bd8e5cea3cb0fc\", oauth_signature=\"puHy3%2BFnuOJqRTveYcv8pQWzn%2BM%3D\", oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"1458429951\", oauth_version=\"1.0\"';\n    let oauth = new OAuth(),\n        consumerKey = this.consumerKey || '',\n        customerSecret = data.requestTokenSecret || this.accessTokenSecret,\n        token = data.requestToken || this.oauth_token,\n        tokenSecret = data.requestToken || this.oauth_token,\n        timestamp = Date.now().toString().slice(0, -3),\n        nonce = oauth.getOAuthNonce( {size: 32, codification: 16} ),\n        signature = oauth.sign({\n          http_method: 'GET',\n          url: 'https://api.twitter.com/oauth/authenticate',\n          query: {\n            oauth_token: token,\n          },\n          customerSecret: customerSecret,\n          accessTokenSecret: tokenSecret,\n          header: {\n            oauth_consumer_key: consumerKey,\n            oauth_token: token,\n            oauth_nonce: nonce,\n            oauth_signature_method: \"HMAC-SHA1\",\n            oauth_timestamp: timestamp,\n            oauth_version: \"1.0\",\n            oauth_callback: encodeURIComponent( this.oauth_callback ),\n          }\n        });\n\n    return {\n      OAuth: 'oauth_consumer_key=\"' + consumerKey + '\", ' +\n             'oauth_token=\"' + token  + '\", ' +\n             'oauth_nonce=\"' + nonce + '\", ' +\n             'oauth_signature=\"' + signature + '\", ' +\n             'oauth_callback=\"' + encodeURIComponent( this.oauth_callback ) + '\", ' +\n             'oauth_signature_method=\"HMAC-SHA1\", oauth_timestamp=\"' + timestamp + '\", oauth_version=\"1.0\"'\n    };\n  }\n\n  async authenticate() {\n    // get the request_token\n\n    try {\n      var { requestToken, requestTokenSecret } = await this.requestToken();\n      // console.log('aaauuuuuuuuu signed '+ JSON.stringify(await this.requestToken()))\n\n    }\n    catch (e) { console.error(e); }\n\n    let authenticateHeadersSigned = this.headerAuthenticate( { requestToken, requestTokenSecret } );\n    // console.log('aaauuuuuuuuu rtoken '+ requestToken)\n// console.log('aaauuuuuuuuu signed '+ JSON.stringify(authenticateHeadersSigned))\n    return { requestToken, authenticateHeadersSigned };\n  }\n}\n"],"sourceRoot":"/source/"}