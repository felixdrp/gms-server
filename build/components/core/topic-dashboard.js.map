{"version":3,"sources":["components/core/topic-dashboard.js"],"names":[],"mappings":"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","file":"components/core/topic-dashboard.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router'\nimport TopHeaderMenuContainer from './top-header-menu-container'\nimport SearchCompact from './search-compact'\n\n// Used to create the query to fetch data.\nimport { fragment as TopicFragment } from '../../graphql/topic-type'\nimport { fragment as StoryFragment } from '../../graphql/story-type'\nimport { fragment as CommentFragment } from '../../graphql/comment-type'\n\n// Fetch data.\nimport globalFetch from '../../data-fetch/global-fetch'\n\nimport { ADD_TOPIC_LIST } from '../../actions/actions'\n\n\nvar fetcher = new globalFetch();\n\n/**\n * Component that renders the '/' (root) view.\n *\n */\n\nvar TopicDashboard = React.createClass({\n  statics: {\n    fetchData( { location, params = '' } ) {\n      let offset = 0;\n      if ( location && location.query ) {\n        offset = location.query.offset || 0;\n      }\n\n      return {\n        actions: [\n          {\n            action: ADD_TOPIC_LIST,\n            varName: 'topicList'\n          }\n        ],\n        query: `\n          {\n            topicList(offset:\"${offset}\") {\n              offset,\n              timestamp,\n              topics {\n                ...${TopicFragment.name},\n                urlList {\n                  ...${StoryFragment.name},\n                }\n                comments\n              }\n            }\n          }\n          ${TopicFragment.definition}\n          ${StoryFragment.definition}\n         `,\n      }\n    }\n  },\n\n  fetchData() {\n\n    console.log( fetcher.getData( this.constructor.fetchData( this.props.location ).query ) );\n    // return fetcher.getData( this.constructor.fetchData( this.props.location ).query );\n\n  },\n\n  topicItem(topic) {\n    let i = 0|0;\n    return (\n      <div>\n        <h2>{topic.title}</h2>\n        <div  style={{marginLeft: 18}}>\n          {topic.urlList.map(\n            (story) => (\n              <div key={i++}>\n                <h3>{story.title || story.url}</h3>\n                <h4>{story.story || ''}</h4>\n                <a href={story.url} target={'_blank'}>{story.url} </a>\n              </div>\n            )\n          )}\n        </div>\n      </div>\n    );\n  },\n\n  render() {\n    let props = this.props,\n        offset = ( props.location.query && 'offset' in props.location.query ) ?\n          props.location.query.offset :\n          0,\n        topicList = [];\n\n    if ( props.topicListPage[offset] && props.topicListPage[offset].topicList.length > 0 ) {\n      for (let topic of props.topicListPage[offset].topicList) {\n        topicList.push(<div key={ topic.id }>{ this.topicItem( topic ) }</div>)\n      }\n    } else {\n      topicList = 'Topic list is empty at the moment... Please try later.';\n    }\n\n    return (\n      <div id=\"topicDashboard\">\n        <div className=\"main-header\">\n          <TopHeaderMenuContainer {...this.props} />\n        </div>\n\n        <div className=\"main-viewport\">\n          <div style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    width: '100%',\n                    maxWidth: 600,\n                  }}\n          >\n            <div className=\"\" style={{flex: 1}} >\n              <h3>Topic list</h3>\n              <div onClick={ () => this.fetchData() }>\n              { topicList }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"main-footer\" style={{}}>\n        </div>\n      </div>\n    );\n  }\n});\n\nfunction mapStateToProps(state, ownProps) {\n  // console.log(state, ownProps)\n  return {\n    // if route contains params\n    params: ownProps.params,\n    location: ownProps.location,\n    // store data.\n    topicListPage: state.topicListPage,\n  };\n}\nexport default connect(mapStateToProps)(TopicDashboard);\n"],"sourceRoot":"/source/"}