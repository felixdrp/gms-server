{"version":3,"sources":["components/core/topic-dashboard.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,IAAI,YAAY,gBAAM,WAAN,CAAkB;;;AAChC,WAAS;AACP,oCAAY;AACV,aAAO;AACL,gBAAQ,gBAAR;AACA,sEAE6B,oBAAc,IAAd,0HAGzB,oBAAc,UAAd,kEALJ;OAFF,CADU;KADL;GAAT;;AAgBA,gCAAU,WAAW;AACnB,WACE;;;MACE;;;QAAK,UAAU,KAAV;OADP;MAGG,UAAU,OAAV,CAAkB,GAAlB,CACC,UAAC,KAAD;eACE;;;;UACQ;;cAAG,MAAM,MAAM,GAAN,EAAT;YAAqB,MAAM,GAAN;eAArB;WADR;;OADF,CAJJ;KADF,CADmB;GAjBW;AAiChC,4BAAS;AACP,QAAI,QAAQ,KAAK,KAAL,CADL;;AAGP,WACE;;QAAK,IAAG,gBAAH,EAAL;MACE;;UAAK,WAAU,aAAV,EAAL;QACE,gEAA4B,KAAK,KAAL,CAD9B;OADF;MAKE;;UAAK,WAAU,eAAV,EAAL;QACE;;YAAK,OAAO;AACF,uBAAS,MAAT;AACA,6BAAe,KAAf;AACA,8BAAgB,QAAhB;AACA,0BAAY,QAAZ;AACA,qBAAO,MAAP;AACA,wBAAU,GAAV;aANL;WAAL;UASE;;cAAK,WAAU,EAAV,EAAa,OAAO,EAAC,MAAM,CAAN,EAAR,EAAlB;YACE;;;;aADF;YAEG,UAAU,KAAK,SAAL,EAAV;WAXL;SADF;OALF;MAsBE,uCAAK,WAAU,aAAV,EAAwB,OAAO,EAAP,EAA7B,CAtBF;KADF,CAHO;GAjCuB;CAAlB,CAAZ;;AAkEJ,SAAS,eAAT,CAAyB,KAAzB,EAAgC,QAAhC,EAA0C;AACxC,SAAO;;AAEL,YAAQ,SAAS,MAAT;AACR,cAAU,SAAS,QAAT;GAHZ,CADwC;CAA1C;kBAOe,yBAAQ,eAAR,EAAyB,SAAzB","file":"components/core/topic-dashboard.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router'\nimport TopHeaderMenuContainer from './top-header-menu-container'\nimport SearchCompact from './search-compact'\n\n// Fetch data.\nimport { getTopicList } from '../../data-fetch/data-fetch'\nimport { fragment as TopicFragment } from '../../graphql/topic-type'\n\n\n\n/**\n * Component that renders the '/' (root) view.\n *\n */\n\nvar Dashboard = React.createClass({\n  statics: {\n    fetchData() {\n      return {\n        action: 'add_topic_list',\n        query: `\n          {\n            topicList(amount:1){...${TopicFragment.name},urlList{url}},\n            topicList2:topicList(amount:1){...otrofragment,urlList{url}}\n          }\n          ${TopicFragment.definition}\n          fragment otrofragment on Topic {title}\n         `,\n      }\n    }\n  },\n\n  topicItem(topicInfo) {\n    return (\n      <div>\n        <h1>{topicInfo.title}</h1>\n\n        {topicInfo.urlList.map(\n          (story) => (\n            <div>\n              story <a href={story.url}>{story.url} </a>\n            </div>\n          )\n        )}\n      </div>\n    );\n  },\n\n  render() {\n    let props = this.props;\n\n    return (\n      <div id=\"topicDashboard\">\n        <div className=\"main-header\">\n          <TopHeaderMenuContainer {...this.props} />\n        </div>\n\n        <div className=\"main-viewport\">\n          <div style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    width: '100%',\n                    maxWidth: 600,\n                  }}\n          >\n            <div className=\"\" style={{flex: 1}} >\n              <h3>Topic list</h3>\n              {'hola' || this.topicItem()}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"main-footer\" style={{}}>\n        </div>\n      </div>\n    );\n  }\n});\n\nfunction mapStateToProps(state, ownProps) {\n  return {\n    // if route contains params\n    params: ownProps.params,\n    location: ownProps.location\n  };\n}\nexport default connect(mapStateToProps)(Dashboard);\n"],"sourceRoot":"/source/"}