{"version":3,"sources":["components/core/topic-dashboard.js"],"names":[],"mappings":"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","file":"components/core/topic-dashboard.js","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router'\nimport TopHeaderMenuContainer from './top-header-menu-container'\nimport SearchCompact from './search-compact'\nimport PageCommonBottom from './page-common-bottom'\n\n// Used to create the query to fetch data.\nimport { fragment as TopicFragment } from '../../graphql/topic-type'\nimport { fragment as StoryFragment } from '../../graphql/story-type'\nimport { fragment as CommentFragment } from '../../graphql/comment-type'\n\n// Fetch data.\nimport globalFetch from '../../data-fetch/global-fetch'\n\nimport { ADD_TOPIC_LIST } from '../../actions/actions'\n\n\nvar fetcher = new globalFetch();\n\n/**\n * Component that renders the '/' (root) view.\n *\n */\n\nvar TopicDashboard = React.createClass({\n  statics: {\n    fetchData( { location, params = '' } ) {\n      let offset = 0;\n      if ( location && location.query ) {\n        offset = location.query.offset || 0;\n      }\n\n      return {\n        actions: [\n          {\n            action: ADD_TOPIC_LIST,\n            varName: 'topicList'\n          }\n        ],\n        query: `\n          {\n            topicList(offset:\"${offset}\") {\n              offset,\n              timestamp,\n              topics {\n                ...${TopicFragment.name},\n                urlList {\n                  ...${StoryFragment.name},\n                }\n                comments\n              }\n            }\n          }\n          ${TopicFragment.definition}\n          ${StoryFragment.definition}\n         `,\n      }\n    }\n  },\n\n  async fetchData() {\n    // Call component own method static: fetchData\n    // To retrieve the query to fetch the data needed by the component\n    let actionsAndQuery = this.constructor.fetchData(\n      {\n        // The location information with the url query.\n        // Ex. if url \"/path?query=raspberry\" then location.query = raspberry\n        location: this.props.location,\n\n        // Ex. params:\n        // if route \"/path/:id\" and url \"/path/3\" then params.id = 3\n        params: this.props.params\n      }\n    );\n    let data = await fetcher.getData( actionsAndQuery.query );\n\n    actionsAndQuery.actions.forEach(\n      (action) => {\n        this.props.dispatch({\n          type: action.action,\n          ...data.data[action.varName]\n        });\n      }\n    )\n    console.log( 'async fetchData() ' + JSON.stringify(actionsAndQuery.actions) + JSON.stringify(data) )\n  },\n\n  componentDidMount() {\n    let query = this.props.location.query,\n        offset = 0;\n\n    if ( 'offset' in query && parseInt( Number( query.offset ) ) ) {\n      offset = parseInt( Number( query.offset ) );\n    }\n\n    this._topicListBrowserMenu._INIT_POSITION = this._topicListBrowserMenu.offsetTop;\n    window.addEventListener('scroll', this.handleOnScroll);\n\n    // The client need to fetch Data?\n    if (\n      // If not exist this.props.topicListPage\n      !( this.props.topicListPage ) ||\n      !( this.props.topicListPage[offset] ) ||\n      !( 'timestamp' in this.props.topicListPage[offset] ) ||\n      // Or the timestamp of the topicListPage is out of date.\n      ( Date.now() - this.props.topicListPage[offset].timestamp ) > 5000\n    ) {\n      // Fetch data\n      this.fetchData();\n    }\n  },\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleOnScroll);\n  },\n\n  handleOnScroll(e) {\n    console.log(e.target.scrollingElement.scrollTop);\n    this.setState({scroll: e.target.scrollingElement.scrollTop});\n  },\n\n  topicItem(topic) {\n    let i = 0|0;\n    return (\n      <div className=\"topic-list-item\">\n        <h2 className=\"title\">{topic.title}</h2>\n        <div className=\"stories-list\" style={{}}>\n          <div className=\"header\">\n            Stories\n            <hr/>\n          </div>\n          {topic.urlList.map(\n            (story) => (\n              <div key={i++} className={'story-item'}>\n                <a href={story.url} target={'_blank'}><h3>{ story.title || story.url || '' }</h3></a>\n                <h4>{story.story || ''}</h4>\n              </div>\n            )\n          )}\n        </div>\n      </div>\n    );\n  },\n\n  render() {\n    let props = this.props,\n        offset = ( props.location.query && 'offset' in props.location.query ) ?\n          props.location.query.offset :\n          0,\n        topicList = [];\n\n    if ( props.topicListPage[offset] && props.topicListPage[offset].topicList.length > 0 ) {\n      for (let topic of props.topicListPage[offset].topicList) {\n        topicList.push(<div key={ topic.id }>{ this.topicItem( topic ) }</div>)\n      }\n    } else {\n      topicList = 'Topic list is empty at the moment... Please try later.';\n    }\n\n    return (\n      <div id=\"topicDashboard\">\n        <div className=\"main-header\">\n          <TopHeaderMenuContainer {...this.props} />\n          <div\n            ref={ (c) => this._topicListBrowserMenu = c }\n            style={{\n              display: 'flex',\n              top: 1,\n              position: (\n                this.state &&\n                'scroll' in this.state &&\n                '_topicListBrowserMenu' in this &&\n                '_INIT_POSITION' in this._topicListBrowserMenu &&\n                this.state.scroll >= this._topicListBrowserMenu._INIT_POSITION )?\n                  'fixed': 'relative',\n              width: '100%',\n              flexDirection: 'row',\n              justifyContent: 'center',\n              alignItems: 'center',\n              backgroundColor: '#fafafa',\n              // paddingBottom: 7,\n              boxShadow: '0px 0px 2px 0px rgba(0,0,0,0.39)',\n              color: '#777',\n              padding: 3,\n            }}\n          >\n            <b>\n              { ['<',1,2,3,4,5,'>'].map( (i) => <span key={i} style={{padding: '0 10px', cursor: 'pointer'}}>{ i }</span> ) }\n            </b>\n          </div>\n        </div>\n\n        <div className=\"main-viewport\">\n          <div\n            style={{\n              // display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'center',\n              alignItems: 'center',\n              width: '100%',\n              maxWidth: 600,\n            }}\n          >\n            <div style={{flex: 1}} >\n              <div onClick={ () => this.fetchData() }>\n                { topicList }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"main-footer\" style={{}}>\n        </div>\n      </div>\n    );\n  }\n});\n\nfunction mapStateToProps(state, ownProps) {\n  // console.log(state, ownProps)\n  return {\n    // if route contains params\n    params: ownProps.params,\n    location: ownProps.location,\n    // store data.\n    topicListPage: state.topicListPage,\n  };\n}\nexport default connect(mapStateToProps)(TopicDashboard);\n"],"sourceRoot":"/source/"}