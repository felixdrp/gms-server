{"version":3,"sources":["graphql/topic-list.js"],"names":[],"mappings":";;;;;;AAAA;;AAOA;;;;;;;;;;;;;;;;AAYA,IAAM,gBAAgB,+BAAsB;AAC1C,QAAM,WAAN;AACA,eAAa,6CAAb;AACA,UAAQ;AACN,YAAQ;AACN,kCADM;AAEN,mBAAa,2BAAb;KAFF;AAIA,eAAW;AACT,kCADS;AAET,mBAAa,gCAAb;KAFF;AAIA,YAAQ;AACN,YAAM,6CAAN;AACA,mBAAa,2DAAb;KAFF;GATF;CAHoB,CAAhB;;kBAmBS","file":"graphql/topic-list.js","sourcesContent":["import {\n  graphql,\n  GraphQLList,\n  GraphQLObjectType,\n  GraphQLString,\n} from 'graphql'\n\nimport TopicType from './topic-type'\n\n/**\n * We define our Topic List type.\n *\n * This implements the following type system shorthand:\n *   type TopicList {\n *   \t offset: String\n *     topics: [TopicType]\n *   }\n */\n\nconst topicListType = new GraphQLObjectType({\n  name: 'TopicList',\n  description: 'A list of topics. We can submit the offset.',\n  fields: {\n    offset: {\n      type: GraphQLString,\n      description: 'An offset to seek topics.',\n    },\n    timestamp: {\n      type: GraphQLString,\n      description: 'The timestamp of the response.',\n    },\n    topics: {\n      type: new GraphQLList( TopicType ),\n      description: 'The topic tag words. It will be used to create tag clouds',\n    },\n  }\n});\n\nexport default topicListType\n"],"sourceRoot":"/source/"}