{"version":3,"sources":["graphql/schema.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAeA,IAAI,WAAW,+BAAsB;AACpC,QAAM,MAAN;AACA,UAAQ;AACN,QAAI,EAAE,4BAAF,EAAJ;AACA,UAAM,EAAE,4BAAF,EAAN;GAFF;CAFc,CAAX;;;AASJ,IAAI,iBAAiB,gDAAjB;;AAEJ,IAAM,oBAAoB,CACxB,MADwB;;AAGxB,cAHwB,EAIxB,OAJwB,EAKxB,QALwB,EAMxB,QANwB,EAOxB,YAPwB,CAApB;;;;;AAaN,IAAM,YAAY,+BAAsB;AACtC,QAAM,OAAN;AACA,UAAQ;WAAO;AACb,YAAM;AACJ,cAAM,QAAN;AACA,cAAM;AACJ,cAAI,EAAE,4BAAF,EAAJ;SADF;AAGA,iBAAS,iBAAU,CAAV,EAAa,IAAb,EAAmB;AAC1B,iBAAO,eAAK,KAAK,EAAL,CAAZ,CAD0B;SAAnB;OALX;AASA,mBAAa;AACX,cAAM,cAAN;AACA,cAAM;;SAAN;AAGA,iBAAS,iBAAU,CAAV,EAAa,IAAb,EAAmB;AAC1B,iBAAO,iBAAP,CAD0B;SAAnB;OALX;;;GAVM;CAFQ,CAAZ;;AAyBN,IAAM,SAAS,2BAAkB;AAC/B,SAAO,SAAP;;CADa,CAAT;;kBAKS","file":"graphql/schema.js","sourcesContent":["import {\n  graphql,\n  GraphQLSchema,\n  GraphQLObjectType,\n  GraphQLList,\n  GraphQLString\n} from 'graphql'\n\nimport data from './data.json'\n\n// Some test calls:\n// http://localhost:8009/graphql?query={user(id:\"1\"){name}}\n// http://localhost:8009/graphql?query={collections}\n\n// Define our user type, with two string fields; `id` and `name`\nvar userType = new GraphQLObjectType({\n name: 'User',\n fields: {\n   id: { type: GraphQLString },\n   name: { type: GraphQLString },\n }\n});\n\n// Define our user type, with two string fields; `id` and `name`\nvar collectionType = new GraphQLList(GraphQLString);\n\nconst collectionSources = [\n  'News',\n  // Twitter\n  'Social Media',\n  'Blogs',\n  'Photos',\n  'Videos',\n  'Live Diary',\n];\n\n// Define our schema, with one top level field, named `user`, that\n// takes an `id` argument and returns the User with that ID.\n\nconst queryType = new GraphQLObjectType({\n  name: 'Query',\n  fields: () => ({\n    user: {\n      type: userType,\n      args: {\n        id: { type: GraphQLString }\n      },\n      resolve: function (_, args) {\n        return data[args.id];\n      }\n    },\n    collections: {\n      type: collectionType,\n      args: {\n        // id: { type: GraphQLString }\n      },\n      resolve: function (_, args) {\n        return collectionSources;\n      }\n    }\n\n  })\n});\n\nconst schema = new GraphQLSchema({\n  query: queryType\n\n});\n\nexport default schema\n"],"sourceRoot":"/source/"}