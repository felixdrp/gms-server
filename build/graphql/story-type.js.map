{"version":3,"sources":["graphql/story-type.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAmBA,IAAM,YAAY,+BAAsB;AACvC,QAAM,OAAN;AACA,eAAa,yBAAb;AACA,UAAQ;AACN,SAAK;AACH,kCADG;AAEH,mBAAa,gBAAb;KAFF;AAIA,WAAO;AACL,kCADK;AAEL,mBAAa,iBAAb;KAFF;AAIA,WAAO;AACL,kCADK;AAEL,mBAAa,iBAAb;KAFF;GATF;CAHiB,CAAZ;;kBAmBS;AAER,IAAM,8BAAW;AACtB,QAAM,eAAN;AACA,cAAY,mDAAZ;CAFW","file":"graphql/story-type.js","sourcesContent":["import {\n  graphql,\n  GraphQLObjectType,\n  GraphQLString,\n  GraphQLNonNull,\n  GraphQLInt,\n} from 'graphql'\n\n/**\n * We define our Story type.\n *\n * This implements the following type system shorthand:\n *   type Story {\n *     url: String\n *     title: String\n *     story: String\n *   }\n */\n\nconst StoryType = new GraphQLObjectType({\n name: 'Story',\n description: 'A story from news, etc.',\n fields: {\n   url: {\n     type: GraphQLString,\n     description: 'The story url.',\n   },\n   title: {\n     type: GraphQLString,\n     description: 'The story title',\n   },\n   story: {\n     type: GraphQLString,\n     description: 'The story text.',\n   },\n }\n});\n\nexport default StoryType\n\nexport const fragment = {\n  name: 'StoryFragment',\n  definition: 'fragment StoryFragment on Story {url,title,story}'\n}\n"],"sourceRoot":"/source/"}