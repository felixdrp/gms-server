{"version":3,"sources":["oauth/oauth.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;IAEqB;AACnB,WADmB,KACnB,CAAY,IAAZ,EAAkB;wCADC,OACD;GAAlB;;;;;;;6BADmB;;oCAQQ;UAAZ,6DAAO,kBAAK;;;AAEzB,UAAI,OAAO,KAAK,IAAL,IAAa,EAAb;;;AAEP,qBAAe,KAAK,YAAL,IAAqB,EAArB;UACf,QAAQ,SAAR,KAAQ;eAAM,KAAK,KAAL,CAAY,KAAK,MAAL,KAAgB,YAAhB,CAAZ,CAA2C,QAA3C,CAAqD,YAArD;OAAN,CALa;AAMzB,aAAO,MAAO,IAAP,EACE,IADF,CACQ,OADR,EAEE,MAFF,CAEU;eAAQ,OAAO,OAAP;OAAR,CAFjB,CANyB;;;;yBAWrB,MAAO;;SAnBM","file":"oauth/oauth.js","sourcesContent":["\n\nexport default class OAuth {\n  constructor(type) {\n\n  }\n\n  // Return a random code to use in the oauth_nonce\n  // More info:\n  // https://dev.twitter.com/oauth/overview/authorizing-requests\n  getOAuthNonce( data = {} ) {\n    // The size of the response.\n    let size = data.size || 42,\n        // The codification: 2 binary, 8 octal, 16 hex, 36 number and alphabet\n        codification = data.codification || 36,\n        codec = () => Math.floor( Math.random() * codification ).toString( codification );\n    return Array( size )\n            .fill( codec() )\n            .reduce( prev => prev + codec() );\n  }\n\n  sign( data ) {\n    \n  }\n\n}\n"],"sourceRoot":"/source/"}